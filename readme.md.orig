<<<<<<< HEAD
# Coding Temple Staff Portal

## Running the Application

- [ ] Clone the repository

- [ ] Create your virtual environment

### MacOS/Linux Virtual Environement Creation

```Shell
mkdir myproject
cd myproject
python3 -m venv venv
```

### Windows Virtual Environement Creation

```Shell
mkdir myproject
cd myproject
py -3 -m venv venv
```

- [ ] Activate your Virtual Environment

### MacOS/Linux Environment Activation

```Shell
. venv/bin/activate
```

### Windows Environment Activation

```Shell
venv\Scripts\activate
```

- [ ] In your terminal, set your environment variables

### MacOS/Linux Environment Variables

```Shell
export FLASK_APP=run.py
export FLASK_ENV=development
```

### Windows Environment Variables

```Shell
set FLASK_APP=run.py
set FLASE_ENV=development
```

### Powershell Environment Variables

```PowerShell
$Env:FLASK_APP = "run.py"
$Env:FLASK_ENV = "development"
```

- [ ]  In your terminal, install all of the required modules

```Shell
pip install -r requirements.txt
```

- [ ] Run the app

```Shell
flask run
```
=======
# Setting up a Flask app

This is a starter template for creating a flask application. The instructions are as follows:

## Clone the repository
## Create your virtual environment
### MacOS/Linux:
#### mkdir myproject
#### cd myproject
#### python3 -m venv venv
### Windows:
#### mkdir myproject
#### cd myproject
#### py -3 -m venv venv
## Activate your Virtual Environment
### MacOS/Linux:
#### . venv/bin/activate
### Windows:
#### venv\Scripts\activate
## In your terminal, set your FLASK_APP variable to run.py
### MacOS/Linux:
##### export FLASK_APP=run.py
### Windows:
##### set FLASK_APP=run.py
### Powershell
##### $Env:FLASK_APP = "run.py"
## In your terminal, install all of the required modules
### Windows/Linux/MacOS:
##### pip install -r requirements.txt
>>>>>>> master

## Manage PIP dependencies

Anytime you install something via pip install, be sure to freeze the new dependency in requirements.txt

```Shell
pip freeze > requirements.txt
```

## db migrations
<<<<<<< HEAD

The application should automatically migrate when run, but can be manually executed with the command:

```Shell
flask db upgrade
```
=======
### flask db upgrade

## Seed User
$Env:SU_1 = "password"
flask seed_data
>>>>>>> master
